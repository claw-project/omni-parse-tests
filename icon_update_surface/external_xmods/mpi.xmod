<OmniFortranModule version="1.0">
  <name>mpi</name>
  <depends>
  </depends>
  <typeTable>
    <FbasicType type="I7f8ca0c0f1f0" is_parameter="true" ref="Fint"/>
    <FfunctionType type="F7f8ca0c10ee0" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FbasicType type="C7f8ca0c115a0" ref="Fcharacter">
      <len>
        <FintConstant type="Fint">20</FintConstant>
      </len>
    </FbasicType>
    <FfunctionType type="F7f8ca0c12110" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FbasicType type="C7f8ca0c127d0" ref="Fcharacter">
      <len>
        <FintConstant type="Fint">20</FintConstant>
      </len>
    </FbasicType>
    <FfunctionType type="F7f8ca0c13310" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c13fe0" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c14cb0" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c15980" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c16650" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c17320" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c17ff0" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c18cc0" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c19990" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c1a660" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c1b330" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c1c000" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c1ccd0" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c1d9a0" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c1e670" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
    <FfunctionType type="F7f8ca0c1f340" return_type="Fvoid">
      <params>
      </params>
    </FfunctionType>
  </typeTable>
  <identifiers>
    <id type="Fint" sclass="fsave" original_name="mpi_comm_world" declared_in="mpi">
      <name>mpi_comm_world</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_real8" declared_in="mpi">
      <name>mpi_real8</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_integer" declared_in="mpi">
      <name>mpi_integer</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_character" declared_in="mpi">
      <name>mpi_character</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_logical" declared_in="mpi">
      <name>mpi_logical</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_any_source" declared_in="mpi">
      <name>mpi_any_source</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_max" declared_in="mpi">
      <name>mpi_max</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_info_null" declared_in="mpi">
      <name>mpi_info_null</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_status_size" declared_in="mpi">
      <name>mpi_status_size</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_sum" declared_in="mpi">
      <name>mpi_sum</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_thread_single" declared_in="mpi">
      <name>mpi_thread_single</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_thread_funneled" declared_in="mpi">
      <name>mpi_thread_funneled</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_thread_serialized" declared_in="mpi">
      <name>mpi_thread_serialized</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="mpi_thread_multiple" declared_in="mpi">
      <name>mpi_thread_multiple</name>
    </id>
    <id type="I7f8ca0c0f1f0" sclass="flocal" original_name="mpi_address_kind" declared_in="mpi">
      <name>mpi_address_kind</name>
    </id>
    <id type="Fint" sclass="fsave" original_name="integer" declared_in="mpi">
      <name>integer</name>
    </id>
    <id type="F7f8ca0c10ee0" sclass="ffunc" original_name="mpi_init" declared_in="mpi">
      <name>mpi_init</name>
    </id>
    <id type="F7f8ca0c12110" sclass="ffunc" original_name="mpi_init_thread" declared_in="mpi">
      <name>mpi_init_thread</name>
    </id>
    <id type="F7f8ca0c13310" sclass="ffunc" original_name="mpi_comm_size" declared_in="mpi">
      <name>mpi_comm_size</name>
    </id>
    <id type="F7f8ca0c13fe0" sclass="ffunc" original_name="mpi_comm_rank" declared_in="mpi">
      <name>mpi_comm_rank</name>
    </id>
    <id type="F7f8ca0c14cb0" sclass="ffunc" original_name="mpi_finalize" declared_in="mpi">
      <name>mpi_finalize</name>
    </id>
    <id type="F7f8ca0c15980" sclass="ffunc" original_name="mpi_allreduce" declared_in="mpi">
      <name>mpi_allreduce</name>
    </id>
    <id type="F7f8ca0c16650" sclass="ffunc" original_name="mpi_reduce" declared_in="mpi">
      <name>mpi_reduce</name>
    </id>
    <id type="F7f8ca0c17320" sclass="ffunc" original_name="mpi_alltoall" declared_in="mpi">
      <name>mpi_alltoall</name>
    </id>
    <id type="F7f8ca0c17ff0" sclass="ffunc" original_name="mpi_isend" declared_in="mpi">
      <name>mpi_isend</name>
    </id>
    <id type="F7f8ca0c18cc0" sclass="ffunc" original_name="mpi_issend" declared_in="mpi">
      <name>mpi_issend</name>
    </id>
    <id type="F7f8ca0c19990" sclass="ffunc" original_name="mpi_irecv" declared_in="mpi">
      <name>mpi_irecv</name>
    </id>
    <id type="F7f8ca0c1a660" sclass="ffunc" original_name="mpi_waitall" declared_in="mpi">
      <name>mpi_waitall</name>
    </id>
    <id type="F7f8ca0c1b330" sclass="ffunc" original_name="mpi_testall" declared_in="mpi">
      <name>mpi_testall</name>
    </id>
    <id type="F7f8ca0c1c000" sclass="ffunc" original_name="mpi_barrier" declared_in="mpi">
      <name>mpi_barrier</name>
    </id>
    <id type="F7f8ca0c1ccd0" sclass="ffunc" original_name="mpi_allgather" declared_in="mpi">
      <name>mpi_allgather</name>
    </id>
    <id type="F7f8ca0c1d9a0" sclass="ffunc" original_name="mpi_type_extent" declared_in="mpi">
      <name>mpi_type_extent</name>
    </id>
    <id type="F7f8ca0c1e670" sclass="ffunc" original_name="mpi_alloc_mem" declared_in="mpi">
      <name>mpi_alloc_mem</name>
    </id>
    <id type="F7f8ca0c1f340" sclass="ffunc" original_name="mpi_free_mem" declared_in="mpi">
      <name>mpi_free_mem</name>
    </id>
  </identifiers>
  <declarations>
    <varDecl lineno="15" file="mpi_mod.f90">
      <name type="I7f8ca0c0f1f0">mpi_address_kind</name>
      <value>
        <functionCall type="Fint" is_intrinsic="true">
          <name>kind</name>
          <arguments>
            <Var type="Fint" scope="local">integer</Var>
          </arguments>
        </functionCall>
      </value>
    </varDecl>
  </declarations>
  <interfaceDecls>
  </interfaceDecls>
  <aux_info>
  </aux_info>
</OmniFortranModule>
